<uses-permission android:name="android.permission.INTERNET" />

package com.example.scoala.network;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

public class HttpConnection {
    private final String url;

    private HttpURLConnection connection;

    private InputStream inputStream;

    private InputStreamReader inputStreamReader;
    private BufferedReader reader;


    public HttpConnection(String url) {
        this.url = url;
    }

    public HttpURLConnection getConnection() {
        return connection;
    }

    public InputStream getInputStream() {
        return inputStream;
    }

    public InputStreamReader getInputStreamReader() {
        return inputStreamReader;
    }

    public BufferedReader getReader() {
        return reader;
    }

    public void openConnection() throws IOException {
        URL url = new URL(this.url);
        this.connection = (HttpURLConnection) url.openConnection();
        inputStream = connection.getInputStream();
        inputStreamReader = new InputStreamReader(inputStream);
        reader = new BufferedReader(inputStreamReader);
    }

    public String readHttp() throws IOException {
        StringBuilder result = new StringBuilder();
        openConnection();
        String line;
        while((line =reader.readLine())!= null)
        {
            result.append(line);
        }
        closeConnection();
        return result.toString();
    }

    public void closeConnection() throws IOException {
        reader.close();
        inputStreamReader.close();
        inputStream.close();
        connection.disconnect();
    }
}


public class DownloadCallable implements Callable<String> {

    private final HttpConnection connection;

    public DownloadCallable(HttpConnection connection) {
        this.connection = connection;
    }

    @Override
    public String call() throws Exception {
        return connection.readHttp();
    }
}

package com.example.scoala;

import androidx.appcompat.app.AppCompatActivity;


import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.util.Log;
import android.widget.ListView;

import com.example.scoala.network.DownloadCallable;
import com.example.scoala.network.HttpConnection;
import com.example.scoala.parser.JSONParser;
import com.example.scoala.utils.Student;
import com.example.scoala.utils.StudentAdaptor;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class JsonParserActivity extends AppCompatActivity {

    public String url = "https://raw.githubusercontent.com/stefaniavictoriarata/Android-Project/main/Student.json";


    public List<Student> students = new ArrayList<>();

    ListView lvJson;

    JSONParser parser;

    HttpConnection connection;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_json_parser);

        lvJson = findViewById(R.id.j_lv_students);


        connection = new HttpConnection(url);
        DownloadCallable thread = new DownloadCallable(connection);
        ExecutorService executorService = Executors.newCachedThreadPool();
        Future<String> result = executorService.submit(thread);

        try {
            String line = result.get();
            parser = new JSONParser();
            students = parser.getStudentsFromJson(line);
            StudentAdaptor adaptor = new StudentAdaptor(getApplicationContext(), R.layout.row_lv_students, students, getLayoutInflater());
            lvJson.setAdapter(adaptor);
        } catch (ExecutionException e) {
            throw new RuntimeException(e);
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }


//        ExecutorService executor = Executors.newSingleThreadExecutor();
//        executor.execute(new Runnable() {
//            @Override
//            public void run() {
//                try {
//                    connection = new HttpConnection(url);
//                    parser = new JSONParser();
//                    String result = connection.readHttp();
//                    if(result != null) {
//                        students = parser.getStudentsFromJson(result);
//                    }
//                    StudentAdaptor adaptor = new StudentAdaptor(getApplicationContext(), R.layout.row_lv_students, students, getLayoutInflater());
//                    lvJson.setAdapter(adaptor);
//                } catch (IOException e) {
//                    throw new RuntimeException(e);
//                }
//
//            }
//        });
    }
}